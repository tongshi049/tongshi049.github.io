<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tong Shi&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-05T18:08:24.919Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Tong Shi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode - String Tag Q522</title>
    <link href="http://yoursite.com/2019/04/05/leetcodeQ522/"/>
    <id>http://yoursite.com/2019/04/05/leetcodeQ522/</id>
    <published>2019-04-05T17:11:15.000Z</published>
    <updated>2019-04-05T18:08:24.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Q-522-Longest-Uncommon-Subsequence-II"><a href="#LeetCode-Q-522-Longest-Uncommon-Subsequence-II" class="headerlink" title="LeetCode Q 522 - Longest Uncommon Subsequence II"></a>LeetCode Q 522 - Longest Uncommon Subsequence II</h1><p>Given a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <strong>any</strong> subsequence of the other strings.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p><strong>Algorithm: Sort</strong></p><ul><li>First step: sort the given array. We sort the given array according to its length and also its lexicographical order.<br>tips 1:  Itâ€™s straightforward that we should sort the array according to length of string, since we want to find the string having the longest length and at the same time it is not the subsequence of others.<br>tips 2: We also consider the lexicographical order of strings, because we want to skip duplicates.</li><li>Second step: go through the array having the longest length and at the same time it is not the subsequence of others.<br>tips: In this step, we can just check if the candidate string is the subsequence of the first string in the array. We can do this recursively or iteratively.</li></ul><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p><strong>Code:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findLUSlength</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Step 1: sort the accroding to its length and lexicographical order.</span></span><br><span class="line"><span class="comment">// Put the longer one first, and put the duplicates together. </span></span><br><span class="line">Arrays.sort(strs, <span class="keyword">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String s1, String s2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (s1.length() != s2.length())</span><br><span class="line">                <span class="keyword">return</span> s2.length() - s1.length();</span><br><span class="line">            <span class="keyword">return</span> s1.compareTo(s2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 2: traverse the array, find it</span></span><br><span class="line">    String s = strs[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>, count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (index &lt; strs.length) &#123;</span><br><span class="line">    <span class="keyword">while</span> (index &lt; strs.length() &amp;&amp; s.equals(strs[index])) &#123;</span><br><span class="line">    index++; count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span> &amp;&amp; (s.equals(strs[<span class="number">0</span>]) || isSubsequence(strs[<span class="number">0</span>], s)))</span><br><span class="line">    <span class="keyword">return</span> s.length();</span><br><span class="line">    <span class="keyword">if</span> (index &lt; strs.length)&#123;</span><br><span class="line">    s = strs[index++]; count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// identify if the last string is the answer</span></span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span> &amp;&amp; !isSubsequence(strs[<span class="number">0</span>], s)) </span><br><span class="line">        <span class="keyword">return</span> s.length();</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// how to decide if a string is a substring of strs[0]</span></span><br><span class="line"><span class="comment">// Recursive method</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSubsequnce</span><span class="params">(String s1, String s2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (s2.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span> (s1.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> index = s1.indexOf(s2.charAt(<span class="number">0</span>));</span><br><span class="line"><span class="keyword">if</span> (index == -<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> isSubsequnce(s1.substring(index + <span class="number">1</span>), s2.substring(<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Iterative method</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSubsequnce</span><span class="params">(String s1, String s2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> index =  -<span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span> (j &lt; s2.length()) &#123;</span><br><span class="line">   <span class="comment">//s.indexOf(str, startIndex)</span></span><br><span class="line">index = s1.indexOf(s2.charAt(j++), index + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (index == -<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> j == s2.length();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode-Q-522-Longest-Uncommon-Subsequence-II&quot;&gt;&lt;a href=&quot;#LeetCode-Q-522-Longest-Uncommon-Subsequence-II&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="leetcode, string" scheme="http://yoursite.com/tags/leetcode-string/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode - String Tag Q521</title>
    <link href="http://yoursite.com/2019/04/05/leetcodeQ521/"/>
    <id>http://yoursite.com/2019/04/05/leetcodeQ521/</id>
    <published>2019-04-05T16:56:55.000Z</published>
    <updated>2019-04-05T18:08:26.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Q-521-Longest-Uncommon-Subsequence-I"><a href="#LeetCode-Q-521-Longest-Uncommon-Subsequence-I" class="headerlink" title="LeetCode Q 521 - Longest Uncommon Subsequence I"></a>LeetCode Q 521 - Longest Uncommon Subsequence I</h1><p>Given a group of two strings, find the longest uncommon subsequence of this group of two strings.<br>The input will be two strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesnâ€™t exist, return -1.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p><strong>Algorithm:</strong><br>    It is straitforward that we can divide this question into two cases:</p><ul><li>Two input strings equal, then return -1;</li><li>Two input strings differ, then return the length of the longer one.</li></ul><p><strong>Code:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findLUSlength</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a.equals(b))</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> Math.max(a.length(), b.length());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode-Q-521-Longest-Uncommon-Subsequence-I&quot;&gt;&lt;a href=&quot;#LeetCode-Q-521-Longest-Uncommon-Subsequence-I&quot; class=&quot;headerlink&quot; title=&quot;Le
      
    
    </summary>
    
    
      <category term="leetcode, string" scheme="http://yoursite.com/tags/leetcode-string/"/>
    
  </entry>
  
  <entry>
    <title>b</title>
    <link href="http://yoursite.com/2019/04/02/b/"/>
    <id>http://yoursite.com/2019/04/02/b/</id>
    <published>2019-04-02T20:47:28.000Z</published>
    <updated>2019-04-02T21:33:43.813Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/04/02/b/Tahm_Kench_Poro.jpg" title="Tahm Img">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/04/02/b/Tahm_Kench_Poro.jpg&quot; title=&quot;Tahm Img&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>a</title>
    <link href="http://yoursite.com/2019/04/02/a/"/>
    <id>http://yoursite.com/2019/04/02/a/</id>
    <published>2019-04-02T20:22:57.000Z</published>
    <updated>2019-04-02T21:33:48.301Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">'Hello World!'</span>);</span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;
      
    
    </summary>
    
      <category term="Cat1" scheme="http://yoursite.com/categories/Cat1/"/>
    
      <category term="Cat1.1" scheme="http://yoursite.com/categories/Cat1/Cat1-1/"/>
    
      <category term="Cat2" scheme="http://yoursite.com/categories/Cat2/"/>
    
      <category term="Cat3" scheme="http://yoursite.com/categories/Cat3/"/>
    
    
      <category term="Tag1" scheme="http://yoursite.com/tags/Tag1/"/>
    
      <category term="Tag2" scheme="http://yoursite.com/tags/Tag2/"/>
    
      <category term="Tag3" scheme="http://yoursite.com/tags/Tag3/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/02/hello-world/"/>
    <id>http://yoursite.com/2019/04/02/hello-world/</id>
    <published>2019-04-02T20:20:04.574Z</published>
    <updated>2019-04-02T20:20:04.574Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
